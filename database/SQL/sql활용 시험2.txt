[문항1]
1-DECLARE
2-BEGIN
3-END
4-DML

[문항2]
트리거는 자동적으로 동작한다.
프로시저는 사용하려면 직접 호출해야한다.
트리거는 해당 테이블에 DML 명령어가 수행될 때 특정 기능을 수행하도록 만든 것이다.
프로시저는 DML 명령어를 묶어놓아서 특정 기능을 수행하도록 만든 것이다.


[문항3]
CREATE OR REPLACE PROCEDURE guguProc(
    DAN IN NUMBER
)
IS
BEGIN
    FOR i IN 1..9 LOOP
        DBMS_OUTPUT.PUT_LINE(DAN || ' * ' || i || ' = ' || DAN * i);
    END LOOP;
END;

[문항4]
1)
CREATE TABLE DEPTS
    AS (SELECT *
          FROM DEPARTMENTS);

2)
ALTER TABLE DEPTS
ADD PRIMARY KEY(DEPARTMENT_ID);

3)
4)
CREATE OR REPLACE PROCEDURE deptsProc(
    P_DEPARTMENT_ID IN DEPTS.DEPARTMENT_ID%TYPE,
    P_DEPARTMENT_NAME IN DEPTS.DEPARTMENT_NAME%TYPE,
    P_DML_TYPE IN CHAR
)
IS
BEGIN
    CASE UPPER(P_DML_TYPE)
    WHEN 'I' THEN
        INSERT INTO DEPTS(DEPARTMENT_ID, DEPARTMENT_NAME)
        VALUES(P_DEPARTMENT_ID, P_DEPARTMENT_NAME);
    WHEN 'U' THEN
        UPDATE DEPTS
           SET DEPARTMENT_NAME = P_DEPARTMENT_NAME
         WHERE DEPARTMENT_ID = P_DEPARTMENT_ID;
    WHEN 'D' THEN
    
[문항5]
CREATE OR REPLACE PROCEDURE emp_hiredate_proc(
    P_EMPLOYEE_ID IN EMPLOYEES.EMPLOYEE_ID%TYPE,
    P_DATE OUT NUMBER
)
IS
    V_COUNT NUMBER := 0;
    NO_EMPLOYEE EXCEPTION;
BEGIN
    SELECT COUNT(*)
      INTO V_COUNT
      FROM EMPLOYEES
     WHERE EMPLOYEE_ID = P_EMPLOYEE_ID;
    
    IF V_COUNT = 0 THEN
        RAISE NO_EMPLOYEE;
    END IF;
            
    SELECT TRUNC(MONTHS_BETWEEN(SYSDATE,HIRE_DATE)/12)
      INTO P_DATE
      FROM EMPLOYEES
     WHERE EMPLOYEE_ID = P_EMPLOYEE_ID;
    
    EXCEPTION 
        WHEN NO_EMPLOYEE THEN 
            DBMS_OUTPUT.PUT_LINE('해당 사원이 없습니다.');  
END;

[문항6]
CREATE OR REPLACE PROCEDURE emp_merge_proc(
    P_EMPLOYEE_ID IN EMPS.EMPLOYEE_ID%TYPE,
    P_LAST_NAME IN EMPS.LAST_NAME%TYPE,
    P_EMAIL IN EMPS.EMAIL%TYPE,
    P_HIRE_DATE IN EMPS.HIRE_DATE%TYPE,
    P_JOB_ID IN EMPS.JOB_ID%TYPE
)
IS 
BEGIN     
    MERGE INTO EMPS E
     USING DUAL
     ON (E.EMPLOYEE_ID = P_EMPLOYEE_ID)
    WHEN MATCHED THEN
        UPDATE SET
        E.LAST_NAME = P_LAST_NAME,
        E.EMAIL = P_EMAIL,
        E.HIRE_DATE = P_HIRE_DATE,
        E.JOB_ID = P_JOB_ID
    WHEN NOT MATCHED THEN
        INSERT (E.EMPLOYEE_ID, E.LAST_NAME, E.EMAIL, E.HIRE_DATE, E.JOB_ID)
        VALUES (P_EMPLOYEE_ID, P_LAST_NAME, P_EMAIL, P_HIRE_DATE, P_JOB_ID);
END;

[문항7]
CREATE OR REPLACE PROCEDURE salesProc
IS
BEGIN
    MERGE INTO day_of_sales S1
    USING (SELECT TO_DATE(REGDATE, 'YYYY/MM/DD')
             FROM sales
           GROUP BY TO_DATE(REGDATE, 'YYYY/MM/DD')) S2
    on (TO_DATE(REGDATE, 'YYYY/MM/DD') = TO_DATE(REGDATE, 'YYYY/MM/DD'))    
    WHEN MATCHED THEN
        UPDATE SET
        S1.final_total = (SELECT SUM(TOTAL * PRICE)
                            FROM sales)
    WHEN NOT MATCHED THEN
        INSERT(REGDATE, FINAL_TOTAL)
        VALUES(SYSDATE, (SELECT SUM(TOTAL * PRICE)
                            FROM sales));
END;

