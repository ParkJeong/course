DESC DEPARTMENTS;

--1. INSERT 첫번째 방법(모든 칼럼 데이터를 한번에 지정)
INSERT INTO DEPARTMENTS
VALUES (280, 'Developer', NULL, 1700);

ROLLBACK; -- 실행지점을 뒤로 되돌림

--2. INSERT 두번째 방법(직접 칼럼을 지정하고 저장)
INSERT INTO DEPARTMENTS(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID)
VALUES (290, '개발자', 1700);

INSERT INTO DEPARTMENTS(DEPARTMENT_ID, DEPARTMENT_NAME, LOCATION_ID)
VALUES (300, 'GAMER', 1700);

SELECT *
  FROM DEPARTMENTS;


--3. 서브쿼리 구문으로 INSERT
--사본테이블 만들기
--WHERE 1=1 -> TRUE 데이터가 들어간다.
--WHERE 1=2 -> FALSE 데이터가 안들어간다. 테이블의 형식만 가져오기 위함인듯
CREATE TABLE MANAGERS AS
  SELECT EMPLOYEE_ID, FIRST_NAME, JOB_ID, SALARY, HIRE_dATE
    FROM EMPLOYEES
   WHERE 1=2;

INSERT INTO MANAGERS
  (EMPLOYEE_ID, FIRSt_NAME, JOB_ID, SALARY, HIRE_DATE)
  (SELECT EMPLOYEE_ID, FIRST_NAME, JOB_ID, SALARY, HIRE_DATE
    FROM EMPLOYEES
   WHERE JOB_ID LIKE '%MAN');

SELECT *
  FROM MANAGERS;

ROLLBACK;

--UPDATE 구문
--TKQHSXPDLQMF
CREATE TABLE EMPS AS 
(SELECT * FROM EMPLOYEES);
SELECT * FROM EMPS;
ALTER TABLE EMPS
ADD (CONSTRAINT EMPS_EMP_ID_PK PRIMARY KEY(EMPLOYEE_ID),
     CONSTRAINT EMPS_MANAGER_FK FOREIGN KEY(MANAGER_ID)
                REFERENCES EMPS(EMPLOYEE_ID)
);
DELETE FROM EMPS
 WHERE EMPLOYEE_ID = 100;

UPDATE EMPS
SET    SALARY = 100000
WHERE EMPLOYEE_ID = 100;

UPDATE EMPS
   SET SALARY = SALARY * 1.1
 WHERE EMPLOYEE_ID = 100;

UPDATE EMPS
   SET PHONE_NUMBER = '031.123.1234',
       MANAGER_ID = 102
 WHERE EMPLOYEE_ID = 100;

UPDATE EMPS
   SET SALARY =
       (SELECT 1000
         FROM DUAL)
 WHERE EMPLOYEE_ID = 100;

UPDATE EMPS
   SET (SALARY, PHONE_NUMBER) =
       (SELECT SALARY, PHONE_NUMBER
          FROM EMPS
         WHERE EMPLOYEE_ID = 101)
 WHERE EMPLOYEE_ID = 100;


CREATE TABLE DEPTS AS
(SELECT * FROM DEPARTMENTS);

SELECT *
  FROM DEPTS;
ROLLBACK;

DELETE FROM DEPTS; -- 모든 행 삭제
DELETE FROM DEPTS
 WHERE DEPARTMENT_ID = 10;
 
--DELETE(서브쿼리)
DELETE FROM EMPS
 WHERE DEPARTMENT_ID = 
                     (SELECT DEPARTMENT_ID
                        FROM DEPTS
                       WHERE DEPARTMENT_NAME = 'Shipping');

ROLLBACK;
SELECT *
  FROM EMPS;
  
  
SELECT *
  FROM AUTH;
  
SELECT *
  FROM INFO;
  
SELECT *
  FROM AUTH A
LEFT OUTER JOIN INFO I
ON A.USER_ID = I.USER_ID;

SELECT *
  FROM AUTH A, INFO I
 WHERE A.USER_ID = I.USER_ID(+);

SELECT *
  FROM AUTH A;
SELECT *
  FROM AUTH A
RIGHT OUTER JOIN INFO I
ON A.USER_ID = I.USER_ID;

ROLLBACK;
CREATE TABLE EMPS_IT AS
(SELECT *
  FROM EMPLOYEES
 WHERE 1=2);
 
INSERT INTO EMPS_IT
  (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, HIRE_DATE, JOB_ID)
VALUES
  (105, 'David', 'Kim', 'DAVIDKIM', '06/03/04', 'IT_PROG');
SELECT *
  FROM EMPS_IT;
/*
MERGE(테이블 수정 추가가 빈번한 경우에, 따로 저장할 테이블을 만들어 놓고,
        비교해서 추가, 수정 구문을 실행시켜주는 방식)
*/
MERGE INTO EMPS_IT A
  USING (SELECT *
           FROM EMPLOYEES
          WHERE JOB_ID = 'IT_PROG') B
  ON (A.EMPLOYEE_ID = B.EMPLOYEE_ID)
 WHEN MATCHED THEN
   UPDATE SET
    A.PHONE_NUMBER = B.PHONE_NUMBER,
    A.HIRE_DATE = B.HIRE_DATE,
    A.JOB_ID = B.JOB_ID,
    A.SALARY = B.SALARY,
    A.COMMISSION_PCT = B.COMMISSION_PCT,
    A.MANAGER_ID = B.MANAGER_ID,
    A.DEPARTMENT_ID = B.DEPARTMENT_ID
 WHEN NOT MATCHED THEN
   INSERT VALUES
    (B.EMPLOYEE_ID, B.FIRST_NAME, B.LAST_NAME, B.EMAIL,
     B.PHONE_NUMBER, B.HIRE_DATE, B.JOB_ID, B.SALARY,
     B.COMMISSION_PCT, B.MANAGER_ID, B.DEPARTMENT_ID);
     
SELECT * 
  FROM EMPS_IT;
  
  
-- 실습
INSERT INTO EMPS_IT
  (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, HIRE_DATE, JOB_ID)
VALUES
  (102, '렉스', '킴', 'LEX', '01/04/06', 'AD_VP');
  
INSERT INTO EMPS_IT
  (EMPLOYEE_ID, FIRST_NAME, LAST_NAME, EMAIL, HIRE_DATE, JOB_ID)
VALUES
  (102, '니니', '키', 'NIAN', '20/04/06', 'AD_VP');
UPDATE EMPS
   SET 
-- EMPLOYEES 테이블을 매번 수정되는 테이블이라고 가정하고,
-- 기존데이터는 EMAIL, PHONE, SALARY, MANAGER_ID, DEPARTMENT_ID
-- 새로 유입된 데이터는 그냥 그대로 전부 추가
;
SELECT *
  FROM EMPS
 WHERE JOB_ID = 'AD_VP';
 
SELECT *
  FROM EMPS_IT;
  
ROLLBACK;

MERGE INTO EMPS_IT A
  USING (SELECT * 
           FROM EMPLOYEES
          WHERE JOB_ID = 'AD_VP') B
  ON (A.EMPLOYEE_ID = B.EMPLOYEE_ID)
 WHEN MATCHED THEN
   UPDATE SET
-- 기존데이터는 EMAIL, PHONE, SALARY, MANAGER_ID, DEPARTMENT_ID
     A.HIRE_DATE = B.HIRE_DATE,
     A.FIRST_NAME = B.FIRST_NAME,
     A.LAST_NAME = B.LAST_NAME,
     A.JOB_ID = B.JOB_ID,
     A.COMMISSION_PCT = B.COMMISSION_PCT
 WHEN NOT MATCHED THEN
   INSERT VALUES
    (B.EMPLOYEE_ID, B.FIRST_NAME, B.LAST_NAME, B.EMAIL,
     B.PHONE_NUMBER, B.HIRE_DATE, B.JOB_ID, B.SALARY,
     B.COMMISSION_PCT, B.MANAGER_ID, B.DEPARTMENT_ID);
  
SELECT *
  FROM EMPS_IT;
  
SELECT *
  FROM AUTH A NATURAL JOIN INFO I;

SELECT *
  FROM AUTH A, INFO I
 WHERE A.USER_ID = I.USER_ID;

SELECT *
  FROM AUTH A
INNER JOIN INFO I
ON A.USER_ID = I.USER_ID;