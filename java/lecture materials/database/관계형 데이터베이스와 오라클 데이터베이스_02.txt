관계형 데이터베이스의 구성 요소

테이블
관계형 데이터베이스는 기본적으로 데이터를 2차원 표 형태로 저장하고 관리한다. 이 표 형태의 데이터 저장 공간을 테이블(table)이라고 한다. 가로줄을 행(row), 세로줄을 열(column)이라고 부른다.
relation이라고도 부른다.

행
저장하려는 하나의 개체를 구성하는 여러 값을 가로로 늘어뜨린 형태이다.
튜플(tuple) 또는 레코드(record)라고도 부른다.

열
저장하려는 데이터를 대표하는 이름과 공통 특성을 정의한다. 저장 정보의 종류와 저장 가능한 값의 최대 길이 그리고 값의 중복을 허용하지 않는 등의 저장 조건과 범위를 지정할 수 있다.
애트리뷰트(attribute) 또는 필드(field)라고도 부른다.


키는 하나의 테이블을 구성하는 여러 열 중에서 특벼란 의미를 지닌 하나 또는 여러 열의 조합을 의미한다.


기본키(PK, Primary Key)
한 테이블 내에서 중복되지 않는 값만 가질 수 있는 키이다. 하나 또는 여러 열의 조합으로 만들 수 있다.
1. 테이블에 저장된 행을 식별할 수 있는 유일한 값이어야 한다.
2. 값의 중복이 없어야 한다.
3. NULL 값을 가질 수 없다.

대부분의 경우에 기본키로 개인 정보 노출이 가장 적은 데이터를 선정한다.

웹 서비스를 비롯한 대부분의 프로그램은 가입 회원을 관리하기 위해 회원 번호 같은 특수한 데이터를 따로 정의하여 관리한다. 이러한 데이터는 내부 관리 목적으로만 사용하므로 일반적으로 사용자에게는 공개하지 않는다.


보조키
보조키는 대체키(alternate key)라고도 부르며 후보키(candidate key)에 속해 있는 키이다. 그리고 후보 키중에서 기본키로 지정되지 않은 열이다.
후보키는 기본키가 될 수 있는 모든 키를 의미한다. 즉 기본키 역시 후보키에 속한다. 이 후보키 중 기본키로 지정되지 않은 키를 보조키 또는 대체키라고 한다.


외래키(FK, Foreign Key)
특정 테이블에 포함되어 있으면서 다른 테이블의 기본키로 지정된 키를 의미한다. 외래키는 외부키라고도 부른다.

ex)
학과 정보 테이블의 기본키: 학과 코드
학생 정보 테이블의 열에 '학과 코드'가 포함되어있다.
학생 정보 테이블이 학과 코드를 참조한다고 표현한다. 학생 정보 테이블에서 학과 코드를 참조하여 학과 정보를 얻어 낼 수 있다는 의미이다.

실무에서 사용되는 테이블 규모
테이블은 몇백~몇천개
각 테이블이 가지는 열 규모 몇 백개
행수는 억단위



복합키(Composite Key)
여러 열을 조합하여 기본키 역할을 할 수 있게 만든 키를 뜻한다.
복합키를 만들 때 적게는 두세 개, 많게는 열 개가 넘는 열을 조합하기도 한다.

키는 관계형 데이터베이스에서 테이블 행을 구분하기 위해 그리고 여러 테이블 간의 관계를 정의하기 위해 사용한다는 점을 기억하자.





오라클 데이터베이스


하나의 자료형에 맞춰 한 종류의 데이터를 저장할 수 있는 자료형을 스칼라형이라고 한다.
자료형은 여러 종류가 있으며 한 번에 여러 데이터를 저장할 수 있는 VARRAY, NESTED TABLE같은 컬렉션형도 있다.
일단 자료형에서는 VARCHAR2, NUMBER, DATE 정도만 기억

VARCHAR2(길이): 문자 데이터
NUMBER(전체 자릿수, 소수점 이하 자릿수): 숫자 데이터
DATE: 날짜 데이터


객체
오라클 데이터베이스 내에서 데이터를 저장하고 관리하기 위한 논리 구조를 가진 구성 요소이다.

인덱스: 테이블의 검색 효율을 높이기 위해 사용
뷰: 하나 또는 여러 개의 선별된 데이터를 논리적으로 연결하여 하나의 테이블처럼 사용하게 해줌
시퀀스: 일련 번호를 생성해 줌
프로시저: 프로그래밍 연산
트리거: 데이터 관련 작업의 연결 및 방지 관련 기능을 제공함


PL/SQL
관계형 데이터 베이스에서 데이터를 관리하기 위해 복잡한 기능이 필요할 때 기존 SQL만으로 이를 구현하는 것은 다소 한계가 있다. 그래서 오라클 데이터베이스는 데이터 관리를 위해 별도의 프로그래밍 언어를 제공하는데 이를 PL/SQL(Procedural Language extension to SQL)이라고 한다.
PL/SQL을 사용하면 변수, 조건문, 반복문 등 프로그래밍 언어에서 제공하는 요소를 사용하여 데이터를 관리할 수 있다. 따라서 SQL문만 사용하는 것보다 강력한 데이터 관리 기능을 구현할 수 있다. 














데이터베이스를 사용하지 않을때는 바로 접속해제해라.



