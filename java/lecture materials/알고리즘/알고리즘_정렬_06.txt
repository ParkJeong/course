split으로 나누면
그것을 기준으로 앞뒤가 나뉜다.
앞이나 뒤가 비어있더라도 존재한다.
ex)
String str = "/w 안녕 야호"
str.split("/w 안녕")[1]-> " 야호"




정렬(sorting)
핵심 항목의 대소 관계에 따라 데이터 집합을 일정한 순서로 줄지어 늘어서도록 바꾸는 작업을 말한다.
검색전에는 항상 정렬 후 검색을 해라. 훨씬 빨라진다.
오름차순(ascending order) 정렬
내림차순(descending order) 정렬


안정된 정렬
같은 값의 키를 가진 요소의 순서가 정렬 전후에도 유지되는 것을 말한다.



내부 정렬
정렬할 모든 데이터를 하나의 배열에 저장할 수 있는 경우에 사용하는 알고리즘

외부 정렬
정렬할 데이터가 너무 많아서 하나의 배열에 저장할 수 없는 경우에 사용하는 알고리즘


정렬 알고리즘의 핵심 요소는 교환, 선택, 삽입이다.



버블 정렬
이웃한 두 요소의 대소 관계를 비교하여 교환을 반복한다.

일련의 비교, 교환 작업을 패스(pass)라고 한다.

모든 정렬이 끝나려면 n-1회의 패스가 수행되어야 한다.

public class BubbleSort {
	static void swap(int[] a, int idx1, int idx2) {
		int t = a[idx1];
		a[idx1] = a[idx2];
		a[idx2] = t;
	}
	
	static void bubbleSort(int[] a, int n) {
		for(int i = 0; i < n - 1; i++) {
			for(int j = n - 1; j > i; j++) {
				if(a[j - 1] > a[j]) {
					swap(a, j - 1, j);
				}
			}
		}
	}
}


알고리즘 개선(1)
어떤 패스에서 요소의 교환 횟수가 0이면 더 이상 정렬할 요소가 없다는 뜻이기 때문에 정렬 작업을 멈추면 된다.


알고리즘 개선(2)














































