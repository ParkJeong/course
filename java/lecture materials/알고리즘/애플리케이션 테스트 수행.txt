[문항1]  애플리케이션 테스트 기법으로 알맞지 않은것은?
1) 단위 테스트
2) 인수 테스트
3) 시스템 테스트
4) 결함 테스트
5) 통합테스트

4-결함 테스트


[문항2]  테스트 자동화 도구를 이용하여 테스트를 할 경우의 장점과 단점을 기술하세요
장점
1. 테스트 데이터의 재입력과 재구성 같은 반복 작업의 자동화를 통하여 테스트 인력과 시간을 최소화한다.
2. 향상된 요구사항 정의, 성능 및 스트레스 테스트, 품질 측정을 최적화한다.
3. 빌드확인, 회귀, 다중 플랫폼 호환성, 소프트웨어 구성, 기본 테스트 등의 향상된 테스트 품질을 보장한다.

단점
1. 도입 후 테스트 도구 전문가를 양성 또는 고용이 필요하며, 초기에 프로세스 적용에 대한 시간, 비용, 노력에 대한 추가 투자가 필요하다.
2. 비공개 상용 소프트웨어의 경우 고가이며, 인력과 교육에 대한 유지관리 비용이 높다.


[문항3]  애플리케이션 결함발생시 처리하는 프로세스의 순서를 알맞게 나열하세요.
가) 결함 검토
나) 결함 재확인
다) 최종 분석 및 보고서 작성
라) 결함 추적 및 모니터 활동
마) 결함 관리 계획
바) 결함 수정
사) 결함 기록

마-사-가-바-나-라-다

[문항4]  다음 내용에 해당하는 것은? 응용 프로그램의 UI 비일관성, 부정확한 커서/메시지, 데이터 타입의 표시 오류 등으로 사용자 화면 설계에서 발생된 결함을 말한다.

GUI 결함



[문항5]  JAVA환경의 대표적으로 사용하는 단위 테스트 기법은 무엇입니까?
JUnit을 활용한 테스트


[문항6]  다음 중 결함 관련용어 중 틀린 것은 무엇인가요?
1) 에러(error)란 소프트웨어 개발 또는 유지 보수 중에 발생한 부정확한 결과이다
2) 오류(falut)는 비정상적인 프로그램, 정상 프로그램의 버전 차이로 발생되며, 에러 리턴을 점검하는 코드가 누락된 것을 말한다
3) 실패(failure)는 프로그램 실행 결과의 실패를 의미하며, 예상 결과와 비교함으로써 발견한다
4) 결함(defect)란 버그, 에러, 오류, 실패, 프로그램 개선 사항 등의 전체를 포괄하는 용어이다

3

[문항7]  1) 코드 인스펙션에 대해서 간단히 서술하세요 2) 코드 인스펙션 프로세스를 순서대로 나열하세요
가) 시작
나) 준비
다) 후속처리
라) 범위 계획
마) 인스펙션 회의
바) 재작업

효과적인 테스트방법이다.

라-가-나-마-바-다


[문항8]  괄호 안에 알맞은 내용을 적으시오.
( )외에도 설계 및 설계 산출물까지 포괄하여 소프트웨어 인스펙션으로 부르기도 한다.
( )은 매우 효과적인 테스트 방법으로서 어떠한 다른 테스트 방법으로 대체할 수 없다. 이는 상당한 시간이 필요한 작업이며, 통계에 따르면 인스펙션을 적절히 잘 수행하기만 하면 포함된 에러의 90%까지 찾아낼 수 있다.

코드 인스펙션


[문항9]  아래 코드들은 예외를 일으키는 코드입니다. 예외 클래스명과, 원인을 간단하게 서술하세요.

String a = null;
System.out.println(a.length());

int[] b = new int[] {1, 2, 3, 4, 5};
System.out.println(b[5]);

String c = "10A";
int d = Integer.parseInt(c);

Class.forName("java.#$%");

java.lang.NullPointerException
비어있는 객체의 메서드를 호출하려고해서 예외가 발생했다.

java.lang.ArrayIndexOutOfBoundsException
배열에 존재하지 않는 인덱스에 접근하려고해서 예외가 발생했다.

java.lang.NumberFormatException
숫자형식에 맞지 않는 String을 숫자로 바꾸려고해서 예외가 발생했다.

java.lang.ClassNotFoundException
존재하지 않는 Class에 접근하려고해서 예외가 발생했다.


[문항10]  어피치는 이름과 인덱스를 입력받아 랜덤한 별명을 반환해주는 프로그램을 만들었다. 하지만, 실행시 에러를 발생시키는 부분을 발견했다. sayNick메서드의 발생될 할 수 있는 예외를 찾아내고, 적절한 예외처리 코드로 변경하세요.

public String sayNick(String name, int index){
	String[] arr = {"박장군", "김원장", "진회장", "김재명"};
	int ran = (int)(Math.random() * index);
	
	return name + "별명은:" + arr[ran] + "입니다";
}

index의 값이 arr의 크기를 넘어가면 에러가 발생할 수 있다.
index의 값이 arr의 크기를 넘으면 ran값이 arr의 범위를 벗어난 곳에 접근할 수도 있기 때문이다.


public String sayNick(String name, int index){
	try {
		String[] arr = {"박장군", "김원장", "진회장", "김재명"};
		int ran = (int)(Math.random() * index);

		return name + "별명은:" + arr[ran] + "입니다";
	} catch(ArrayIndexOutOfBoundsException e) {
		return null;
	}
}

